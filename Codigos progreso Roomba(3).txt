INICIO Y ACTUALIZACIÓN DEL ROBOT
ip de config: http://192.168.10.1/
Documento referencia instalación: https://iroboteducation.github.io/create3_docs/setup/ubuntu2204/

se prende colocando el robot en su base
LUEGo se presiona los dos botones a la vez hasta ver que se pone color Azul
se crea un hotspot (Create-03A9) donde se puede actualizer el firmware del robot - esto toma tiempo
una vez que se actualiza, se Vuelve a colocar en color blanco brillante

para el wifi es lo mismo
ya en el hotspot del robot se escribe el nombre y la contraseña de la red

número de serie: 
en el hotspot se busca la pestaña about y ahi está la info del robot:
s/N:e17628

para la conexion: el robot usa= fastrtps_cpp
una vez instalado el ros2 en la pi:
sudo apt install -y ros-humble-irobot-create-msgs
sudo apt install -y build-essential python3-colcon-common-extensions python3-rosdep ros-humble-rmw-cyclonedds-cpp

se debe ejecutar:
echo "export RMW_IMPLEMENTATION=rmw_fastrtps_cpp" >> ~/.bashrc --- esto porque este create3 funciona con ese RMW, dependiendo de cada robot se puede usar el fastcpp (leer documnentación)

para confirmar conexion se ejecuta:
ros2 topic list

CONEXION WIFI CREATE3 Y Raspberry 
--------------------------------------------------------------------------

Ver redes Wi-Fi disponibles
sudo iwlist wlan0 scan | grep 'ESSID'

Ver nombre de la interfaz Wi-Fi disponible
iwconfig

Ver dirección IP de la razpberry
ip addr show wlan0

IPs:
para la raspberry:
ip addr show wlan0: se busca la ip en la 3ra linea: "inet 192.168...."
para el Roomba:
sudo nmap -sn 192.168.xxx.0/24 (.53.82 - dir mac: 50:14:79:44:BA:31)
la otra ip diferente a la de la pi, esa es la del Roomba (.225.16 - dir mac: )

FUNCIONAMIENTO DEL ROBOT
en el docomento de referencia, ir a la seccion de APIs. a partir de aqui ya se puede empezar a trabajar con el robot una vez configurado
OJO:
The robot uses standard ROS 2 messages when available and implements *custom messages* in irobot_create_msgs for data not represented by standard messages
---------------------------------------------------------------------------
conexion ssh windows
cmd (admin): ssh pi@192.168.53.
contraseña: pi
darle a yes


CAMBIO: 55 UBUNTU, 12 IROBOT, 128 RASP
---------------------------------------------------------------------------
USANDO TELEOP KEY
se instala a nivel de Sistema, asi que no es necesario ir a una carpeta en especifico, aunque se hizo esta instalacion en la src del ws:
sudo apt update
sudo apt install ros-humble-teleop-twist-keyboard
ejecutar en el create3 (esto se hace una sola vez):
ros2 run teleop_twist_keyboard teleop_twist_keyboard --ros-args --remap cmd_vel:=/p1/cmd_vel

---------------------------------------------------------------------------

Funcionamiento de los topics (una vez encendido manda los topics solo)

leer topic:
ros2 topic echo nombre del topic (ej: ros2 topic echo /p1/battery_state) recordar ctrl+c para detener

Ver numero de publicadores y suscriptores: Tambien me da el tipo (type) del mensaje
ros2 topic info <tópico>

revisar la estructura del mensaje:
ros2 interface show tipodelmensaje

PUBLICAR UN MENSAJE EN UN TOPIC:
ros2 topic pub topicoapublicar '{campo1: valor, campo2: valor....}'
ejemplo:
'{notes: [{frequency: 440.0, max_runtime: 1.0}]}' ---- es con Comilla simple

Conseguir plantilla del mensaje para el topic:
ros2 topic pub -m nombredeltopico typedeltopico

ejemplo:
ros2 topic pub -m /p1/cmd_vel geometry_msgs/msg/Twist
->linear:
  x: 0.0 ---- m/s
  y: 0.0
  z: 0.0
angular:
  x: 0.0
  y: 0.0
  z: 0.0

entonces, el commando a escribir en la consola para publicar seria (ya no va el -m porque eso es para obtener la estructura del mensaje):
ros2 topic pub /p1/cmd_vel geometry_msgs/msg/Twist '{linear: {x: 0.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.5}}'
ros2 topic pub /p1/cmd_audio irobot_create_msgs/msg/AudioNoteVector '{notes: [{frequency: 329.63, max_runtime: 0.4}, {frequency: 392.00, max_runtime: 0.4}, {frequency: 523.25, max_runtime: 0.4}]}'

Menaje multilinea (El uso de las comillas dobles "..." permite que el bloque YAML esté en varias líneas):
ros2 topic pub /p1/cmd_audio irobot_create_msgs/msg/AudioNoteVector \
"{
  notes: [
    {frequency: 329.63, max_runtime: 0.4},
    {frequency: 392.00, max_runtime: 0.4},
    {frequency: 523.25, max_runtime: 0.4}
  ]
}"

prueba avanzar con commandos, sin detenerse:
	ros2 topic pub -r 10 /p1/cmd_vel geometry_msgs/msg/Twist '{linear: {x: 0.6, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}'

commando odom para conocer las posiciones actuales:
ros2 topic echo /p1/odom --once --field pose.pose.position
